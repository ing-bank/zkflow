apply plugin: 'kotlin'
apply plugin: 'net.corda.plugins.cordapp'
apply plugin: 'net.corda.plugins.cordformation'
apply plugin: 'net.corda.plugins.quasar-utils'

dependencies {
    // Kotlin Dependencies
    implementation "$kotlin_group:kotlin-stdlib-jdk8:$kotlin_version"

    // Corda Development Dependencies
    cordaCompile "$corda_core_release_distribution:corda-core:$corda_core_release_version"

    // CorDapp Dependencies
    cordapp project(":ivno-collateral-token-contract")
    cordapp project(":ivno-collateral-token-workflow")
    cordapp "$corda_tokens_sdk_release_group:tokens-contracts:$corda_tokens_sdk_version"
    cordapp "$corda_tokens_sdk_release_group:tokens-workflows:$corda_tokens_sdk_version"

    // CIF and BNMS
    cordapp "$onixlabs_group:onixlabs-corda-core-contract:$onixlabs_corda_core_release_version"
    cordapp "$onixlabs_group:onixlabs-corda-core-workflow:$onixlabs_corda_core_release_version"
    cordapp "$onixlabs_group:onixlabs-corda-identity-framework-contract:$onixlabs_corda_idfx_release_version"
    cordapp "$onixlabs_group:onixlabs-corda-identity-framework-workflow:$onixlabs_corda_idfx_release_version"
    cordapp "$onixlabs_group:onixlabs-corda-bnms-contract:$onixlabs_corda_bnms_release_version"
    cordapp "$onixlabs_group:onixlabs-corda-bnms-workflow:$onixlabs_corda_bnms_release_version"

    // DASL Dependencies
    cordapp "$dasl_release_group:dasl-contracts:$dasl_version"
    cordapp "$dasl_release_group:dasl-workflows:$dasl_version"
    cordapp "$dasl_release_group:dasl-commons:$dasl_version"


    // Corda Deployment Dependencies
    cordaCompile "$corda_group:corda:$corda_release_version"
    cordaCompile "$corda_group:corda-node:$corda_release_version"
}

jar { exclude '**/log4j2*.xml' }

test { useJUnitPlatform() }

tasks.withType(org.jetbrains.kotlin.gradle.tasks.KotlinCompile) {
    kotlinOptions {
        languageVersion = "1.2"
        apiVersion = "1.2"
        jvmTarget = "1.8"
        javaParameters = true
    }
}

// this is used in the CI process as a way to generate a CorDapps directory
//  containing all the CorDapps we need in the package/docker image
// This is quicker than deployNodes
task deployNode(type: net.corda.plugins.Cordform, dependsOn: ['jar']) {

    nodeDefaults {
        projectCordapp {
            deploy = false
        }
        cordapp project(":ivno-collateral-token-contract")
        cordapp (project(":ivno-collateral-token-workflow")){ config "notary=\"O=Notary,L=London,C=GB\"" }
        cordapp "$corda_tokens_sdk_release_group:tokens-contracts:$corda_tokens_sdk_version"
        cordapp "$corda_tokens_sdk_release_group:tokens-workflows:$corda_tokens_sdk_version"

        // CIF and BNMS
        cordapp "$onixlabs_group:onixlabs-corda-core-contract:$onixlabs_corda_core_release_version"
        cordapp "$onixlabs_group:onixlabs-corda-core-workflow:$onixlabs_corda_core_release_version"
        cordapp "$onixlabs_group:onixlabs-corda-identity-framework-contract:$onixlabs_corda_idfx_release_version"
        cordapp "$onixlabs_group:onixlabs-corda-identity-framework-workflow:$onixlabs_corda_idfx_release_version"
        cordapp "$onixlabs_group:onixlabs-corda-bnms-contract:$onixlabs_corda_bnms_release_version"
        cordapp "$onixlabs_group:onixlabs-corda-bnms-workflow:$onixlabs_corda_bnms_release_version"

        // DASL
        cordapp "$dasl_release_group:dasl-contracts:$dasl_version"
        cordapp "$dasl_release_group:dasl-workflows:$dasl_version"
        cordapp "$dasl_release_group:dasl-commons:$dasl_version"
        rpcUsers = [[user: "guest", "password": "letmein", "permissions": ["ALL"]]]
    }

    node {
        name "O=Bank A,L=London,C=GB"
        p2pPort 10004
        rpcSettings {
            address("localhost:10005")
            adminAddress("localhost:10045")
        }
    }

}

task deployNodes(type: net.corda.plugins.Cordform, dependsOn: ['jar']) {

    nodeDefaults {
        projectCordapp {
            deploy = false
        }
        cordapp project(":ivno-collateral-token-contract")
        cordapp(project(":ivno-collateral-token-workflow")) { config "notary=\"O=Notary,L=London,C=GB\"" }
        cordapp "$corda_tokens_sdk_release_group:tokens-contracts:$corda_tokens_sdk_version"
        cordapp "$corda_tokens_sdk_release_group:tokens-workflows:$corda_tokens_sdk_version"

        // CIF and BNMS
        cordapp "$onixlabs_group:onixlabs-corda-core-contract:$onixlabs_corda_core_release_version"
        cordapp "$onixlabs_group:onixlabs-corda-core-workflow:$onixlabs_corda_core_release_version"
        cordapp "$onixlabs_group:onixlabs-corda-identity-framework-contract:$onixlabs_corda_idfx_release_version"
        cordapp "$onixlabs_group:onixlabs-corda-identity-framework-workflow:$onixlabs_corda_idfx_release_version"
        cordapp "$onixlabs_group:onixlabs-corda-bnms-contract:$onixlabs_corda_bnms_release_version"
        cordapp "$onixlabs_group:onixlabs-corda-bnms-workflow:$onixlabs_corda_bnms_release_version"

        // DASL
        cordapp "$dasl_release_group:dasl-contracts:$dasl_version"
        cordapp "$dasl_release_group:dasl-workflows:$dasl_version"
        cordapp "$dasl_release_group:dasl-commons:$dasl_version"

        rpcUsers = [[user: "guest", "password": "letmein", "permissions": ["ALL"]]]
    }

    node {
        name "O=Notary,L=London,C=GB"
        notary = [validating: false]
        p2pPort 10002
        rpcSettings {
            address("localhost:10003")
            adminAddress("localhost:10043")
        }
        cordapps.clear()
    }

    node {
        name "O=Token Issuing Entity, L=London, C=GB"
        p2pPort 10004
        rpcSettings {
            address("localhost:10005")
            adminAddress("localhost:10045")
        }
    }

    node {
        name "O=Custodian, L=London, C=GB"
        p2pPort 10008
        rpcSettings {
            address("localhost:10009")
            adminAddress("localhost:10049")
        }
    }

    node {
        name "O=Bank A, L=London, C=GB"
        p2pPort 10012
        rpcSettings {
            address("localhost:10013")
            adminAddress("localhost:10053")
        }
    }

    node {
        name "O=Bank B, L=New York, C=US"
        p2pPort 10016
        rpcSettings {
            address("localhost:10017")
            adminAddress("localhost:10057")
        }
    }

    node {
        name "O=Bank C, L=Tokyo, C=JP"
        p2pPort 10020
        rpcSettings {
            address("localhost:10021")
            adminAddress("localhost:10061")
        }
    }
}