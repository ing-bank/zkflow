dependencies {
    // Kotlin Dependencies
    implementation "$kotlin_group:kotlin-stdlib-jdk8:$kotlin_version"

    // Corda Development Dependencies
    implementation "$corda_core_release_distribution:corda-core:$corda_core_release_version"

    implementation "$onixlabs_group:onixlabs-corda-core-integration:$onixlabs_corda_core_release_version"

    implementation "$onixlabs_group:onixlabs-corda-identity-framework-contract:$onixlabs_corda_idfx_release_version"
    implementation "$onixlabs_group:onixlabs-corda-identity-framework-workflow:$onixlabs_corda_idfx_release_version"

    implementation "$onixlabs_group:onixlabs-corda-bnms-contract:$onixlabs_corda_bnms_release_version"
    implementation "$onixlabs_group:onixlabs-corda-bnms-workflow:$onixlabs_corda_bnms_release_version"

    // DASL Dependencies
    implementation "$dasl_release_group:dasl-contracts:$dasl_version"
    implementation "$dasl_release_group:dasl-workflows:$dasl_version"

    cordapp project(":ivno-collateral-token-contract")
    cordapp project(":ivno-collateral-token-workflow")

    // Test Dependencies
    testRuntimeOnly "$junit_group:junit-jupiter-engine:$junit_version"
    testImplementation "$junit_group:junit-jupiter-api:$junit_version"
    testImplementation "$kotlin_group:kotlin-test:$kotlin_version"
    testImplementation "$corda_group:corda-node-driver:$corda_release_version"
    testImplementation "$braid_group:braid-corda:$braid_version"
}

//publishing {
//    publications {
//        maven(MavenPublication) {
//            groupId = project.parent.group
//            version = project.parent.version
//            artifactId = 'ivno-collateral-token-integration'
//            from components.java
//        }
//    }
//    repositories {
////        maven {
////            url "${maven_repo_s3_url}"
////            credentials(AwsCredentials) {
////                accessKey awsCredentials.AWSAccessKeyId
////                secretKey awsCredentials.AWSSecretKey
////            }
////        }
//    }
//}

apply plugin: 'java'

task runMockNetwork(type: JavaExec) {
    classpath = sourceSets.test.runtimeClasspath
    main = 'io.ivno.collateraltoken.integration.MockNetwork'
    jvmArgs = ["-ea", "-javaagent:../lib/quasar.jar"]
}

test {
    jvmArgs = ["-ea", "-javaagent:../lib/quasar.jar"]
    maxHeapSize = "1024m"
//        forkEvery = 15
    //failFast = true // this causes the tests to fail on the first failure - usful for cci debugging
    useJUnitPlatform()
}
