mod string_20;

use string_20::String_20;
use string_20::STRING_20_LENGTH;

const PERMISSION_LENGTH: u16 = STRING_20_LENGTH;

type SerializedPermission = [u8; PERMISSION_LENGTH];

// Define type alias, to make the rest of the template cleaner
type PermissionValue = String_20;

struct Permission {
    value: PermissionValue,
}

impl Permission {
    fn equals(this: Permission, that: Permission) -> bool {
        String_20::equals(this.value, that.value)
    }

    fn deserialize(serialized_permission: SerializedPermission) -> Permission {
        Permission {
            value: PermissionValue::deserialize(serialized_permission),
        }
    }
}