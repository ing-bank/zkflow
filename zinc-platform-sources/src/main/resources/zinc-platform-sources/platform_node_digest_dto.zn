mod platform_consts;

use platform_consts::NODE_DIGEST_BYTES;
use platform_consts::NODE_DIGEST_BITS;
use platform_consts::BYTE_BITS;
use std::convert::from_bits_unsigned;
use std::convert::to_bits;

///Struct NodeDigestDto is only used for input/output reading and writing purposes.
///In internal computations, the circuit only uses NodeDigestBits type.

type NodeDigestBytes = [u8; NODE_DIGEST_BYTES];
type NodeDigestBits = [bool; NODE_DIGEST_BITS];

struct NodeDigestDto {
    bytes: NodeDigestBytes,
}

impl NodeDigestDto {
    fn from_bytes_to_bits(this: NodeDigestDto) -> NodeDigestBits {
        let mut bits = [false; NODE_DIGEST_BITS];

        for i in (0 as u16)..NODE_DIGEST_BYTES {
            let byte_bits = to_bits(this.bytes[i]);
            for j in (0 as u16)..BYTE_BITS {
                bits[BYTE_BITS * i + j] = byte_bits[j];
            }
        }
        bits
    }

    fn from_bits_to_bytes(bits: NodeDigestBits) -> NodeDigestBytes {
        let mut bytes = [0 as u8; NODE_DIGEST_BYTES];

        for i in 0..NODE_DIGEST_BYTES {
            let mut byte_bits = [false; BYTE_BITS];
            for j in 0..BYTE_BITS {
                byte_bits[j] = bits[BYTE_BITS * i + j];
            }
            bytes[i] = from_bits_unsigned(byte_bits);
        }
        bytes
    }
}
