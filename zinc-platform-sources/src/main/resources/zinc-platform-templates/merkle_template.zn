
fn get_merkle_tree_from_${NUM_LEAVES_PLACEHOLDER}_${DIGEST_TYPE_PLACEHOLDER}(leaves: [${DIGEST_BITS_PLACEHOLDER}; ${NUM_LEAVES_PLACEHOLDER}]) -> ${DIGEST_BITS_PLACEHOLDER} {
    dbg!("Consuming ${NUM_LEAVES_PLACEHOLDER} leaves");
    let mut new_leaves = [[false; ${DIGEST_BITS_PLACEHOLDER}]; ${LEVEL_UP_PLACEHOLDER}];
    for i in 0..${LEVEL_UP_PLACEHOLDER} {
        new_leaves[i] = pedersen_to_padded_bits(
            pedersen(concatenate_${DIGEST_TYPE_PLACEHOLDER}(leaves[2 * i], leaves[2 * i + 1])).0,
        );
        dbg!(
            "{}: {}",                                         // dbg!
            2 * i,                                            // dbg!
            ${DTO_PLACEHOLDER}::from_bits_to_bytes(leaves[2 * i])  // dbg!
        ); //dbg!
        dbg!(
            "{}: {}",                                             // dbg!
            2 * i + 1,                                            // dbg!
            ${DTO_PLACEHOLDER}::from_bits_to_bytes(leaves[2 * i + 1])  // dbg!
        ); // dbg!
        dbg!(
            "Digest: {}",                                     // dbg!
            ${DTO_PLACEHOLDER}::from_bits_to_bytes(new_leaves[i])  // dbg!
        ); // dbg!
    }
    dbg!("");
    get_merkle_tree_from_${LEVEL_UP_PLACEHOLDER}_node_digests(new_leaves)
}