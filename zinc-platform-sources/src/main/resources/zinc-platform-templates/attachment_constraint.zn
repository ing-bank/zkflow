// Input parameters:
//   - TYPE_NAME: String = Name of the main struct, and suffix for Serialized struct, use camelcase
//   - CONSTANT_PREFIX: String = prefix to use for constant names, use uppercase

// Serial names are simply skipped, since they are useless in zinc. The same handling applies to all the zinc
// representations of polymorphic structures and objects, where only the length of the serial name is used so as to
// obtain the correct serialized structure size

//! ${TYPE_NAME} lengths
const ${CONSTANT_PREFIX}_LENGTH: u16 = 0;

type Serialized${TYPE_NAME} = [u8; ${CONSTANT_PREFIX}_LENGTH];

struct ${TYPE_NAME};

impl ${TYPE_NAME} {
    fn empty() -> ${TYPE_NAME} {
        ${TYPE_NAME}
    }

    fn equals(this: ${TYPE_NAME}, that: ${TYPE_NAME}) -> bool {
        true
    }

    fn deserialize(serialized: Serialized${TYPE_NAME}) -> ${TYPE_NAME} {
        ${TYPE_NAME}
    }
}
