//!
//! The 'TestBlakeHashMulti' main module.
//!

use std::convert::to_bits;
use std::array::pad;
use std::array::reverse;
use std::crypto::blake2s_multi_input;

fn main(preimage: [[u8; 4]; 2]) -> [u8; 32] {
    let mut preimage_bits = [[false; 32]; 2];
    for k in 0..2 {
        for i in 0..4 {
            let pre_bits = to_bits(preimage[k][i]);
            for j in 0..8 {
                preimage_bits[k][i * 8 + j] = pre_bits[j];
            }
        }

    }

    let digest_bits = blake2s_multi_input(
        preimage_bits[0],
        preimage_bits[1],
    );

    let mut digest = [0 as u8; 32];
    for i in 0..32 {
        let mut bits = [false; 8];
        for j in 0..8 {
            bits[j] = digest_bits[8 * i + j];
        }
        digest[i] = std::convert::from_bits_unsigned(bits);
    }

    digest
}