//!
//! The 'move' main module.
//!

struct PublicInput {
    transaction_id: NodeDigestDto,
    input_hashes: [ComponentGroupLeafDigestDto; INPUT_GROUP_SIZE],
    reference_hashes: [ComponentGroupLeafDigestDto; REFERENCE_GROUP_SIZE],
}

fn main(witness: Witness) -> PublicInput {
    // Check contract rules
    // TODO: disabled for now, so that the circuit can handle any command,
    // and always expects same number of input/output/references
    // check_contract_rules(witness.transaction);

    // Compute the transaction id
    let root_hash = build_merkle_tree(witness.transaction);

    PublicInput {
        transaction_id: NodeDigestDto::from_bits_to_bytes(root_hash),
        input_hashes: compute_input_utxo_digests(
            witness.transaction.inputs.components,
            witness.input_nonces,
        ),
        reference_hashes: compute_reference_utxo_digests(
            witness.transaction.references.components,
            witness.reference_nonces,
        ),
    }
}
