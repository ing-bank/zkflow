// Verify that for each reference, when calculating the digest of its content with the nonce for the utxo
// it points to as provided in the public input, matches the digest provided in the public input.
// This proves that we did not change the contents of the references, compared to
// the VerifierTransaction known by the verifier, of which they were an output.
fn compute_reference_utxo_digests(
    references: [StateAndRefPaddingWrapper; REFERENCE_GROUP_SIZE],
    reference_nonces: [NonceDigestDto; REFERENCE_GROUP_SIZE],
) -> [ComponentGroupLeafDigestDto; REFERENCE_GROUP_SIZE] {
    let mut reference_digests = [ComponentGroupLeafDigestDto {
        bytes: [0; COMPONENT_GROUP_LEAF_DIGEST_BYTES],
    }; REFERENCE_GROUP_SIZE];
    for i in 0..REFERENCE_GROUP_SIZE {
        reference_digests[i] =
            ComponentGroupLeafDigestDto::from_bits_to_bytes(TransactionState::compute_leaf_hash(
                references[i].content.state,
                NonceDigestDto::from_bytes_to_bits(reference_nonces[i]),
            ));
    }
    reference_digests
}

