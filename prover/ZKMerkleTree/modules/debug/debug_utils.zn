//Debug functions to convert bit arrays to byte arrays
fn u32_to_bytes(bits: [bool; U32_BITS]) -> [u8; U32_BYTES] {
    let mut u32_bytes = [0 as u8; U32_BYTES];

    for i in 0..U32_BYTES {
        let mut byte_bits = [false; BYTE_BITS];
        for j in 0..BYTE_BITS {
            byte_bits[j] = bits[BYTE_BITS * i + j];
        }
        u32_bytes[i] = std::convert::from_bits_unsigned(byte_bits);
    }

    u32_bytes
}

fn nonce_attachment_to_bytes(digest: [bool; NONCE_DIGEST_BITS + ATTACHMENT_ID_FINGERPRINT_BITS]) -> [u8; NONCE_DIGEST_BYTES + ATTACHMENT_ID_FINGERPRINT_BYTES] {
    let mut hash_bytes = [0 as u8; NONCE_DIGEST_BYTES + ATTACHMENT_ID_FINGERPRINT_BYTES];

    for i in 0..(NONCE_DIGEST_BYTES + ATTACHMENT_ID_FINGERPRINT_BYTES) {
        let mut byte_bits = [false; BYTE_BITS];
        for j in 0..BYTE_BITS {
            byte_bits[j] = digest[BYTE_BITS * i + j];
        }
        hash_bytes[i] = std::convert::from_bits_unsigned(byte_bits);
    }

    hash_bytes
}

fn nonce_parameter_to_bytes(digest: [bool; NONCE_DIGEST_BITS + PARAMETERS_HASH_FINGERPRINT_BITS]) -> [u8; NONCE_DIGEST_BYTES + PARAMETERS_HASH_FINGERPRINT_BYTES] {
    let mut hash_bytes = [0 as u8; NONCE_DIGEST_BYTES + PARAMETERS_HASH_FINGERPRINT_BYTES];

    for i in 0..(NONCE_DIGEST_BYTES + PARAMETERS_HASH_FINGERPRINT_BYTES) {
        let mut byte_bits = [false; BYTE_BITS];
        for j in 0..BYTE_BITS {
            byte_bits[j] = digest[BYTE_BITS * i + j];
        }
        hash_bytes[i] = std::convert::from_bits_unsigned(byte_bits);
    }

    hash_bytes
}

fn nonce_ref_to_bytes(digest: [bool; NONCE_DIGEST_BITS + REF_FINGERPRINT_BITS]) -> [u8; NONCE_DIGEST_BYTES + REF_FINGERPRINT_BYTES] {
    let mut hash_bytes = [0 as u8; NONCE_DIGEST_BYTES + REF_FINGERPRINT_BYTES];

    for i in 0..(NONCE_DIGEST_BYTES + REF_FINGERPRINT_BITS) {
        let mut byte_bits = [false; BYTE_BITS];
        for j in 0..BYTE_BITS {
            byte_bits[j] = digest[BYTE_BITS * i + j];
        }
        hash_bytes[i] = std::convert::from_bits_unsigned(byte_bits);
    }

    hash_bytes
}

fn nonce_state_to_bytes(digest: [bool; NONCE_DIGEST_BITS + STATE_FINGERPRINT_BITS]) -> [u8; NONCE_DIGEST_BYTES + STATE_FINGERPRINT_BYTES] {
    let mut hash_bytes = [0 as u8; NONCE_DIGEST_BYTES + STATE_FINGERPRINT_BYTES];

    for i in 0..(NONCE_DIGEST_BYTES + STATE_FINGERPRINT_BYTES) {
        let mut byte_bits = [false; BYTE_BITS];
        for j in 0..BYTE_BITS {
            byte_bits[j] = digest[BYTE_BITS * i + j];
        }
        hash_bytes[i] = std::convert::from_bits_unsigned(byte_bits);
    }

    hash_bytes
}


